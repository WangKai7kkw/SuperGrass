# load and combine bacteria metrics into a data frame
files_bac <- list.files('Results/2-core-metrics_bac', "*matrix.tsv", recursive = TRUE, full.names = TRUE)
data_bac <- lapply(files_bac, function(x){read.delim(x, row.names = 1)})
names(data_bac) <- c("bray_curtis_matrix", "jaccard", "unweighted_unifrac", "weighted_unifrac")
# load and combine archaea metrics into a data frame
files_arc <- list.files('Results/2-core-metrics_arc', "*matrix.tsv", recursive = TRUE, full.names = TRUE)
data_arc <- lapply(files_arc, function(x){read.delim(x, row.names = 1)})
names(data_arc) <- c("bray_curtis_matrix", "jaccard", "unweighted_unifrac", "weighted_unifrac")
# metadata
metadata <- read.delim('Data/0-exported-metadata/sra-metadata.tsv', row.names = 1, check.names = FALSE)
metadata <- metadata[c('Animal_ID', 'PCR', 'Phase', 'Diet')]
metadata[, 'Animal_ID'] <- str_extract(string = metadata$Title, pattern = '[0-9][0-9]')
metadata[, 'Phase'] <- do.call(paste,
data.frame(
str_split_fixed(
string = metadata$`Description [sample]`,
pattern = ' ', n = 3)[, 1:2]))
# load and combine bacteria metrics into a data frame
files_bac <- list.files('Results/2-core-metrics_bac', "*matrix.tsv", recursive = TRUE, full.names = TRUE)
data_bac <- lapply(files_bac, function(x){read.delim(x, row.names = 1)})
names(data_bac) <- c("bray_curtis_matrix", "jaccard", "unweighted_unifrac", "weighted_unifrac")
# load and combine archaea metrics into a data frame
files_arc <- list.files('Results/2-core-metrics_arc', "*matrix.tsv", recursive = TRUE, full.names = TRUE)
data_arc <- lapply(files_arc, function(x){read.delim(x, row.names = 1)})
names(data_arc) <- c("bray_curtis_matrix", "jaccard", "unweighted_unifrac", "weighted_unifrac")
# metadata
metadata <- read.delim('Data/0-exported-metadata/sra-metadata.tsv', row.names = 1, check.names = FALSE)
metadata[, 'Animal_ID'] <- str_extract(string = metadata$Title, pattern = '[0-9][0-9]')
# loading required packages
library(tidyverse)
library(vegan)
library(ggsci)
metadata[, 'Animal_ID'] <- str_extract(string = metadata$Title, pattern = '[0-9][0-9]')
metadata[, 'PCR'] <- ifelse(str_detect(metadata$Title, 'A$'), 'A', 'B')
metadata[, 'Phase'] <- do.call(paste,
data.frame(
str_split_fixed(
string = metadata$`Description [sample]`,
pattern = ' ', n = 3)[, 1:2]))
metadata[, 'Diet'] <- str_split_fixed(string = metadata$`Description [sample]`, pattern = ' ', n = 3)[, 3]
metadata$Phase <- factor(metadata$Phase, levels = c("solid phase", "liquid phase", "rumen fluid"),
labels = c("Solid phase", "Liquid phase", "Rumen fluid"))
metadata$Diet <- factor(metadata$Diet, levels = c("corn", "grass", "hay"),
labels = c("Corn silage", "Grass silage", "Grass hay"))
metadata <- metadata[c('Animal_ID', 'PCR', 'Phase', 'Diet')]
metadata[, 'Animal_ID'] <- as.factor(metadata[, 'Animal_ID'])
head(metadata)
vis <- function(distance_matrix, map, color = "", shape = "", point_size = 2){
# color = "Phase"
# shape = "Diet"
# distance_matrix <- data_arc$bray_curtis_matrix
# point_size = 2
pcoa <- cmdscale(distance_matrix, eig = TRUE, k = 4)
coordinates <- data.frame(pcoa$points)
eig_percentage <- round(pcoa$eig/sum(pcoa$eig) * 100, 1)
coordinates <- cbind(coordinates, metadata[rownames(coordinates), ])
plot0 <- ggplot(coordinates, aes_string("X1", "X2", group = color, color = color, shape = shape)) +
geom_point(size = point_size) +
stat_ellipse(level = 0.68) +
labs(x = paste0("PCoA 1: ", eig_percentage[1], "%"),
y = paste0("PCoA 2: ", eig_percentage[2], "%")) +
theme(plot.background = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.line = element_line(linewidth = 1, colour = 'black'),
axis.title = element_text(size = 20, face = "bold", colour = "black"),
axis.text = element_text(size = 18, face = "bold", colour = "black"),
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5),
axis.title.x = element_text(margin = unit(c(5, 0, 0, 0), 'mm')),
axis.title.y = element_text(margin = unit(c(0, 5, 0, 0), 'mm')),
legend.text = element_text(size = 18, face = "bold", colour = "black"),
legend.title = element_text(size = 18, face = "bold", colour = "black"),
legend.background = element_blank(),
legend.key = element_blank()
)
return(plot0)
}
pcoa_bray_curtis_bac <- vis(distance_matrix = data_bac$bray_curtis_matrix,
map = metadata,
color = "Phase", shape = "Diet",
point_size = 3) +
scale_color_nejm() +
guides(color = guide_legend(order = 1))
ggsave("Results/2-pcoa_bray_curtis_bac.png",pcoa_bray_curtis_bac, width = 9, height = 6)
pcoa_bray_curtis_bac <- vis(distance_matrix = data_bac$bray_curtis_matrix,
map = metadata,
color = "Phase", shape = "Diet",
point_size = 4) +
scale_color_nejm() +
guides(color = guide_legend(order = 1))
pcoa_bray_curtis_bac
ggsave("Results/2-pcoa_bray_curtis_bac.png",pcoa_bray_curtis_bac, width = 9, height = 6)
?adonis()
?adonis2()
pcoa_bray_curtis_arc <- vis(data_arc$bray_curtis_matrix,
metadata, point_size = 4,
color = "Phase", shape = "Diet") +
scale_color_nejm() +
guides(color = guide_legend(order = 1))
pcoa_bray_curtis_arc
ggsave("Results/2-pcoa_bray_curtis_arc.png",pcoa_bray_curtis_arc, width = 9, height = 6)
